"""
Задача 
https://inf-ege.sdamgia.ru/problem?id=38588

"""

"""
Текст задачи:

Откройте файл электронной таблицы, содержащей в каждой строке три натуральных числа.
9.xlsx
Выясните, какое количество троек чисел может являться сторонами треугольника, то есть удовлетворяет неравенству треугольника. В ответе запишите только число.
"""

"""
Объяснение:

Для решения данной задачи её можно разделить на несколько этапов:
1) Редактирование данных
2) Получене данных
3) Анализ данных

Давайте решим эту задачу
"""

"""
Этап I. Редактирование данных


Для получения данных нужно нажать на названия файла, что скорее всего всегда так и будет.
Если вдруг это не помогло, попробуйте найти кнопку для загрузки файла.
Если вы не нашли данной кнопки, обратитесь к организатору за помощью.


После скачивания файла его стоит преобразвать в txt файл. 
Сделать это надо, так как иногда файлы могут быть в других форматах, решения для которым может отличатся.
По этому, мы приводим файл к txt формату.
Для этого скорее всего надо будет открыть файл в каком-то редакторе и скапировать из него все значения.
Сделать это можно сочитанием клавиш ctrl+A и ctrl+C.

Далее надо создать свой текстовый файл, формата txt. 
Для этого надо счелкуть правой кнопкой мыши по пустой области рядом с файлом py и выбрать создать новый текстовый файл.
Позже этот файл надо открыть и вставить в него все данные, которые были скопированы ранее.
Сделать это можно сочитанием клавишь ctrl+V.

Все, данные получены, значит их можно сортировать

В данном примере файл 9.xlsx был преобразован в файл 9.txt с сохранением всех значений.
"""

"""
Этап II. Получение данных


После того, как данные были отредактированы, их можно получить.
Для этого мы должны импортировать файл в программу.
Сделать это можно с помощью функции open()
"""

file_data = open('9.txt', 'r')
# сначала мы указываем название файла, потом указываем его режим открытия (r значит read). Так же, можно указать режим кодирования. Для этого надо дополнительно записать encoding='UTF-8'

# Так как нам надо подсчитать количество троек чисел, которые являются сторонами треугольника, нам нужно ввести переменную счета
answer = 0




# Теперь нам надо пройтись по всем троекам чисел и проверить, является ли она сторонами треугольника
for triple in file_data:

    # Этап III. Анализ данных

    # В данном цыкле мы перебераем все строки нашего файла
    # Для того, чтобы числа могли быть сторонами треугольника, необходимо чтобы сумма двух сторон была больше третьей
    # Для этого преобразуем строку в лист и отсортируем числа по возрастанию
    triple = sorted(list(map(int, triple.split())))
    """
    Данную строку нужно рассмотреть более детально, так как она объединяет в себя несколько строк
    Допустим у нас есть строка '4 7 3\n'

    С помощью команды split мы можем разбить строку на лист, используя разделитель
    Тем самым наша строка станет ['4','7','3']
    
    С помощью команды map мы можем преобразовать лист в несколько разным переменных.
    С помощью функции int мы можем преобразовать наш лист не просто в переменные, а в переменные типа int.
    Тем самым теперь у нас есть 3 разных переменных типа int: a=4, b=7, c=3

    А с помощью команды list мы обратно эти числа преобразовываем в лист.
    Тем самым у нас получается не лист из символов, а лист из чисел: [4,7,3]

    Ну а с помощью команды sorted мы сортируем наши числа по возрастанию.
    Тем самым получая список [3,4,7]

    
    Такой алгоритм позволит нам преобразовать строку в список чисел и отсортировать их по возрастанию, что нам поможет в решении задачи.
    """

    # Ну а теперь мы можем проверить, является ли тройка сторонами треугольника
    # Для этого надо вспомнить правило, что в треугольнике сумма меньших сторон всегда должна быть больше, чем наибольшая сторона.
    # Для этого воспользуемся уже отсортированными значениями, где последний символ самый большой
    if triple[0] + triple[1] > triple[2]:
        # Если условие выполняется, то увеличиваем переменную счета на 1
        answer += 1

# После окончания цикла, у нас получится готовый ответ, который остаётятся только вывести и записать в бланк
print(answer) # Ответ: 2453


"""
Тем самым у нас получается такой код:

file_data = open('9.txt', 'r')
answer = 0
for triple in file_data:
    triple = sorted(list(map(int, triple.split())))
    if triple[0] + triple[1] > triple[2]:
        answer += 1
print(answer)


Но важно запомнить, что прежде чем запускать код, нам надо будет преобразовать файл в txt формат.
"""